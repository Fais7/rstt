{"version":3,"sources":["components/Rest.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["Restt","useState","data","updta","id","chngdta","name","price","cat","cmp","fdata","fcn","udata","ucn","useEffect","a","axios","get","d","show","getdata","event","target","value","preventDefault","post","status","alert","getuData","submits","put","className","map","val","onClick","delete","del","type","class","tabindex","action","onSubmit","onChange","placeholder","for","App","Rest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8516feab.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nconst Restt = () => {\r\n    var [data, updta] = useState([]);\r\n    var [id, chngdta] = useState();\r\n    var [fdata, fcn] = useState({ name: \"\", price: 0, cat: \"\", cmp: \"\" });\r\n    var [udata, ucn] = useState({ id: \"\", name: \"\", price: 0, cat: \"\", cmp: \"\" });\r\n    useEffect(\r\n        () => {\r\n            async function show() {\r\n                var d = await axios.get('https://restapittt.herokuapp.com/products/');\r\n                updta(d.data);\r\n            }\r\n            show();\r\n        }\r\n    )\r\n    const getdata = (event) => {\r\n        fcn({ ...fdata, [event.target.name]: event.target.value });\r\n    }\r\n    async function submit(event) {\r\n        event.preventDefault();\r\n        var d = await axios.post('https://restapittt.herokuapp.com/products/', fdata);\r\n        if (d.status === 201) {\r\n            alert(\"product added successfully\");\r\n        }\r\n    }\r\n    const getuData = (event) => {\r\n        ucn({ ...udata, [event.target.name]: event.target.value });\r\n    }\r\n    async function submits(event) {\r\n        event.preventDefault();\r\n        var d = await axios.put(`https://restapittt.herokuapp.com/products/${udata.id}/`, udata);\r\n        if (d.status === 200) {\r\n            alert(\"updated\");\r\n        }\r\n    }\r\n    async function display() {\r\n        try {\r\n            var d = await axios.get(`https://restapittt.herokuapp.com/products/${id}`);\r\n            updta([d.data])\r\n        } catch (e) {\r\n            alert(\"no record found\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <table className=\"table table-success table-striped table-hover text-center table-bordered border-dark\">\r\n                    {<thead>\r\n                        <tr>\r\n                            <th>Product id</th>\r\n                            <th>Product Name</th>\r\n                            <th>Product Price</th>\r\n                            <th>Product Category</th>\r\n                            <th>Product Company</th>\r\n                            <th>Delete Product</th>\r\n                            <th>Update Product</th>\r\n                        </tr>\r\n                    </thead>}\r\n                    {data.map((val) => {\r\n                        return (\r\n                            <><tbody>\r\n                                <tr>\r\n                                    <td>{val.id}</td>\r\n                                    <td>{val.name}</td>\r\n                                    <td>{val.price}</td>\r\n                                    <td>{val.cat}</td>\r\n                                    <td>{val.cmp}</td>\r\n                                    <td><button className=\"btn btn-danger\" onClick={() => {\r\n                                        async function del() {\r\n                                            var d = await axios.delete(`https://restapittt.herokuapp.com/products/${val.id}`);\r\n                                            if (d.status === 204) {\r\n                                                alert(\"deleted successfully!!\")\r\n                                            }\r\n                                        }\r\n                                        del();\r\n                                    }}>Delete</button></td>\r\n                                    <td>\r\n                                        <button type=\"button\" class=\"btn btn-warning\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" onClick={() => {\r\n                                            ucn(val);\r\n                                        }}>\r\n                                            update\r\n                                        </button>\r\n\r\n\r\n                                        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h4>Update Details</h4>\r\n                                                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        <form action=\"\" onSubmit={submits}>\r\n                                                            <input type=\"hidden\" name=\"id\" value={udata.id} onChange={getuData} />\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Product Name</label>\r\n                                                                <input type=\"text\" name=\"name\" value={udata.name} onChange={getuData} placeholder=\"please enter product name\" class=\"form-control\" />\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Product Price</label>\r\n                                                                <input type=\"number\" name=\"price\" value={udata.price} onChange={getuData} placeholder=\"please enter product price\" class=\"form-control\" />\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Product Category</label>\r\n                                                                <input type=\"text\" name=\"cat\" value={udata.cat} onChange={getuData} placeholder=\"please enter product category\" class=\"form-control\" />\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Product Company</label>\r\n                                                                <input type=\"text\" name=\"cmp\" value={udata.cmp} onChange={getuData} placeholder=\"please enter product Company\" class=\"form-control\" />\r\n                                                            </div><br />\r\n                                                            <center><button className=\"btn btn-dark\" data-bs-dismiss=\"modal\">Update Product</button></center>\r\n                                                        </form>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody></>\r\n                        )\r\n                    })}\r\n                </table>\r\n                <center><input type='text' name='id' value={id} onChange={(event) => {\r\n                    chngdta(event.target.value);\r\n                }} /> <button className='btn btn-danger' onClick={display}>Search</button></center>\r\n\r\n                <form onSubmit={submit}>\r\n                    <div className=\"\">\r\n                        <lable for=\"productname\">Product name</lable>\r\n                        <input className=\"form-control\" type=\"text\" name=\"name\" id=\"productname\" value={fdata.name} onChange={getdata} />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <lable for=\"productprice\">Product price</lable>\r\n                        <input className=\"form-control\" type=\"number\" name=\"price\" id=\"productprice\" value={fdata.price} onChange={getdata} />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <lable for=\"productcategory\">Product category</lable>\r\n                        <input className=\"form-control\" type=\"text\" name=\"cat\" id=\"productcategory\" value={fdata.cat} onChange={getdata} />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label for=\"productcompany\">Product company</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"cmp\" id=\"productcompany\" value={fdata.cmp} onChange={getdata} />\r\n                    </div><br />\r\n                    <button type=\"submit\" className=\"btn btn-dark\">Add product</button>\r\n                </form>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Restt;","import React from \"react\";\nimport Restt from \"./Rest\";\nconst App=()=>{\n  return(\n    <>\n  <Restt />\n    </>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}